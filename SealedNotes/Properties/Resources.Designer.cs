//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OptikLaboratory.SealedNotes.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OptikLaboratory.SealedNotes.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Best regards!.
        /// </summary>
        public static string AboutFinish {
            get {
                return ResourceManager.GetString("AboutFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Application designed and developed by Anton Yarkov aka OptikLab. .
        /// </summary>
        public static string AboutFirst {
            get {
                return ResourceManager.GetString("AboutFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   All your questions, wishes or bug reports please send  me to bySLaSH@gmail.com..
        /// </summary>
        public static string AboutSecond {
            get {
                return ResourceManager.GetString("AboutSecond", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   You can just post it on my own site www.optiklab.ru. Also, here you can find more information about this and another projects..
        /// </summary>
        public static string AboutSite {
            get {
                return ResourceManager.GetString("AboutSite", resourceCulture);
            }
        }
        
        public static System.Drawing.Bitmap add {
            get {
                object obj = ResourceManager.GetObject("add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap add_pushed {
            get {
                object obj = ResourceManager.GetObject("add_pushed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap Cancel {
            get {
                object obj = ResourceManager.GetObject("Cancel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap Cancel_pushed {
            get {
                object obj = ResourceManager.GetObject("Cancel_pushed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap del {
            get {
                object obj = ResourceManager.GetObject("del", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap del_pushed {
            get {
                object obj = ResourceManager.GetObject("del_pushed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap edit {
            get {
                object obj = ResourceManager.GetObject("edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap edit_pushed {
            get {
                object obj = ResourceManager.GetObject("edit_pushed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap faq {
            get {
                object obj = ResourceManager.GetObject("faq", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap faq_pushed {
            get {
                object obj = ResourceManager.GetObject("faq_pushed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can choose one of three cryptographic algorothms which will protect your data. Default is TripleDES. Rijndael (AES) more powerful of them. Key and password needs to encrypt your data. Please, keep in mind selected preferences, because it needs to decrypt your data if you lose settings file or change mobile device..
        /// </summary>
        public static string HelpAlgorithm {
            get {
                return ResourceManager.GetString("HelpAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key has differenet lengths in depending from encryption algorithm: Rijndael - 256 bits, TripleDES - 192 bits, RC2 - 128 bits. You can enter less key than needs (text field has red background color), then application will modify it for needed length. Definitely recommended to use your own key (some phrase or text). Also you can genereate this key by Generate button..
        /// </summary>
        public static string HelpKey {
            get {
                return ResourceManager.GetString("HelpKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pasword has different requirements for length: Rijndael - 128 bits, TripleDES - 64 bits, RC2 - 64 bits. You can use default password, but definitely recommended to use your own key (some phrase or text)..
        /// </summary>
        public static string HelpPass {
            get {
                return ResourceManager.GetString("HelpPass", resourceCulture);
            }
        }
        
        public static System.Drawing.Bitmap home {
            get {
                object obj = ResourceManager.GetObject("home", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap home_pushed {
            get {
                object obj = ResourceManager.GetObject("home_pushed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Application is intend to create and keep in protected encrypted state your text notes: personal data, accountary data and etc..
        /// </summary>
        public static string Intend {
            get {
                return ResourceManager.GetString("Intend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Any support questions, wishes, bug reports, please send me to:  bySLaSH@gmail.com, or post it by Contacts form in www.optiklab.ru. Thank you!.
        /// </summary>
        public static string Links {
            get {
                return ResourceManager.GetString("Links", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Main functions: create/edit/delete notes, encrypt/decrypt notes for security and protect, export data in text file..
        /// </summary>
        public static string MainFunctions {
            get {
                return ResourceManager.GetString("MainFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Application contain simple graphic user interface. Main form allow you to see all the notes with its dates and times of creation, modifying and accessing. Here is you can Add new note, Edit note, Delete it or Save to Text file without any encryption. Search bar help you to find some note in list. Editor form is for editing or reading of some note. Preferences form allow to tune security settings: algorithm, key and password..
        /// </summary>
        public static string MainUI {
            get {
                return ResourceManager.GetString("MainUI", resourceCulture);
            }
        }
        
        public static System.Drawing.Bitmap Okie {
            get {
                object obj = ResourceManager.GetObject("Okie", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap Okie_pushed {
            get {
                object obj = ResourceManager.GetObject("Okie_pushed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements:
        ///- PocketPC or Smartphone 
        ///- CPU 150 MHz 
        ///- RAM 64 MByte 
        ///- Display 240 x 320 
        ///- Colors 65536 
        ///- Windows Mobile 5/6/6.5 
        ///- .NET Compact Framework 3.5.
        /// </summary>
        public static string Requirements {
            get {
                return ResourceManager.GetString("Requirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Caution! Always remember your own preferences: algorithm, password and key. Application automaticaly save it in encryption state, but in case of system fail you can lose settings and here will be only one way to decrypt data - your preferences..
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
    }
}
